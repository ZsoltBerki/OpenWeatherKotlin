plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.4.32'
    id "jacoco"
    id "org.sonarqube" version "3.1.1"
}

group 'org.openweather.cached.service'
version '1.0-SNAPSHOT'

apply plugin: 'java'

repositories {
    mavenCentral()
}

configurations {
    ktlint
}

dependencies {
    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib"

    //Tests
    implementation 'org.junit.jupiter:junit-jupiter:5.7.0'

    // Code formatting
    ktlint "com.pinterest:ktlint:0.41.0"

    // Ktor REST client
    implementation "io.ktor:ktor-client-core:1.5.3"
    implementation "io.ktor:ktor-client-cio:1.5.3"

    // JSON
    implementation 'com.google.code.gson:gson:2.8.6'
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // to add a baseline to check against prepend following args:
    // "--baseline=ktlint-baseline.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}

// --- TEST CONFIGURATION ---

// Using JUnit5
test {
    useJUnitPlatform()
}

// Using Jacoco to create test coverage reports
jacocoTestReport {
    reports {
        xml.enabled true
    }
}

// Test coverage is always created after running the tests
plugins.withType(JacocoPlugin) {
    tasks["test"].finalizedBy 'jacocoTestReport'
}

// --- CODE ANALYSIS CONFIGURATION ---
sonarqube {
    properties {
        property 'sonar.host.url', 'https://sonarcloud.io'
        property 'sonar.organization', 'zsoltberki'
        property 'sonar.projectKey', 'ZsoltBerki_OpenWeatherKotlin'
        property 'sonar.sources', 'src/main/kotlin/'
    }
}